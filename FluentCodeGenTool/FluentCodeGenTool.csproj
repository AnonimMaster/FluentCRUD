<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <OutputType>Exe</OutputType>
        <TargetFramework>net8.0</TargetFramework>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <PackageReadmeFile>README.md</PackageReadmeFile>

        <!-- NuGet metadata -->
        <PackageId>FluentCodeGenTool</PackageId>
        <Version>0.0.1</Version>
        <Authors>Kirill Vladimirov</Authors>
        <Company>SuccubHunters Inc.</Company>
        <Description>A flexible and extensible code generation tool built on Roslyn. Designed for use with annotated models, this CLI utility scans compiled .NET assemblies and generates boilerplate or proxy code based on embedded configuration logic. Suitable for modular systems, layered architectures, or rapid prototyping workflows.</Description>
        <PackageTags>codegen generator Roslyn CLI sourcegen tool</PackageTags>
        <RepositoryUrl>https://github.com/SuccubHunter/FluentCodeGenTool</RepositoryUrl>
        <IncludePackageReadmeFile>true</IncludePackageReadmeFile>
        <PackageLicenseExpression>MIT</PackageLicenseExpression>
    </PropertyGroup>

    <PropertyGroup>
        <PackAsTool>true</PackAsTool>
        <ToolCommandName>fluentcodegen</ToolCommandName>
    </PropertyGroup>

    <ItemGroup>
      <PackageReference Include="Microsoft.CodeAnalysis" Version="4.13.0" />
      <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.13.0" />
    </ItemGroup>

    <ItemGroup>
      <ProjectReference Include="..\FluentCodeGenTool.Abstractions\FluentCodeGenTool.Abstractions.csproj" />
    </ItemGroup>

</Project>
